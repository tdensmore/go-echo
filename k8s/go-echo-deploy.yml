---
apiVersion: v1
kind: Namespace
metadata:
  name: go-echo
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: go-echo-sa
  namespace: go-echo
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: go-echo-role
  namespace: go-echo
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["get", "list", "proxy"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: null
  name: go-echo-binding
  namespace: go-echo
subjects:
- kind: ServiceAccount
  name: go-echo-sa
  namespace: go-echo
roleRef:
  kind: Role
  name: go-echo-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: go-echo-deployment
  namespace: go-echo
  labels:
    app: go-echo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: go-echo
  template:
    metadata:
      labels:
        app: go-echo
    spec:
      serviceAccountName: go-echo-sa
      # securityContext:
      #   runAsUser: 1000
      #   runAsGroup: 3000
      #   fsGroup: 2000
      containers:
        - name: go-echo-container
          image: cjimti/go-echo:latest
          imagePullPolicy: Always
          env:
            - name: TCP_PORT
              value: "2701"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          ports:
            - name: go-echo-port
              containerPort: 2701
---
apiVersion: v1
kind: Service
metadata:
  name: "go-echo-service"
  namespace: go-echo
  labels:
    app: go-echo
    system: example
spec:
  type: NodePort
  selector:
    app: "go-echo"
  ports:
    - protocol: "TCP"
      port: 2701
      targetPort: 2701
      nodePort: 32701 #port exposed on the node (cluster)
